import cores


class Obj:
    def __init__(self, win, x, y, w, h, ty, out, t_expl):
        self.x = x  # Pozycja obiektu w osi X
        self.dir = 0  # Kierunek ruchu obiektu
        self.y = y  # Pozycja obiektu w osi Y
        self.w = w  # Szerokość obiektu
        self.h = h  # Wysokość obiektu
        self.ty = ty  # Typ obiektu
        self.out = out  # Stan obiektu (czy jest aktywny)
        self.win = win  # Okno gry
        self.t_expl = t_expl  # Czas trwania eksplozji
        self.cor = cores.cor  # Kolory obiektów

        # Mapa różnych obiektów (samolotów, helikopterów, statków, stacji paliw, eksplozji, itp.)
        self.mp = [
            # Samolot (prosto)
            [[0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 1, 1, 1, 0, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [1, 1, 1, 1, 1, 1, 1],
             [1, 1, 1, 1, 1, 1, 1],
             [1, 1, 0, 1, 0, 1, 1],
             [1, 0, 0, 1, 0, 0, 1],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 1, 1, 1, 0, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [0, 1, 0, 1, 0, 1, 0],
             [0, 1, 0, 1, 0, 1, 0]],
            # Samolot (w lewo)
            [[0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 1, 1, 0, 0, 0],
             [0, 1, 1, 1, 1, 0, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [0, 1, 0, 1, 1, 1, 0],
             [0, 0, 0, 1, 0, 1, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 1, 1, 0, 0, 0],
             [0, 1, 1, 1, 1, 0, 0],
             [0, 1, 0, 1, 1, 1, 0],
             [0, 0, 0, 0, 0, 1, 0]],
            # Samolot (w prawo)
            [[0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 1, 0, 0],
             [0, 0, 1, 1, 1, 1, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [0, 1, 1, 1, 1, 1, 0],
             [0, 1, 1, 1, 0, 1, 0],
             [0, 1, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 0, 0, 0],
             [0, 0, 0, 1, 1, 0, 0],
             [0, 0, 1, 1, 1, 1, 0],
             [0, 1, 1, 1, 0, 1, 0],
             [0, 1, 0, 0, 0, 0, 0]],
            # Helikopter (w prawo, stan 0)
            [[0, 0, 0, 0, 0, 4, 4, 4],
             [0, 0, 0, 4, 4, 4, 0, 0],
             [0, 0, 0, 0, 0, 4, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0],
             [5, 0, 0, 5, 5, 5, 5, 5],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [5, 0, 0, 0, 5, 5, 5, 0],
             [0, 0, 0, 0, 0, 5, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0]],
            # Helikopter (w prawo, stan 1)
            [[0, 0, 0, 4, 4, 4, 0, 0],
             [0, 0, 0, 0, 0, 4, 4, 4],
             [0, 0, 0, 0, 0, 4, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0],
             [5, 0, 0, 5, 5, 5, 5, 5],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [5, 0, 0, 0, 5, 5, 5, 0],
             [0, 0, 0, 0, 0, 5, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0]],
            # Helikopter (w lewo, stan 0)
            [[4, 4, 4, 0, 0, 0, 0, 0],
             [0, 0, 4, 4, 4, 0, 0, 0],
             [0, 0, 4, 0, 0, 0, 0, 0],
             [0, 5, 5, 5, 0, 0, 0, 0],
             [5, 5, 5, 5, 5, 0, 0, 5],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [0, 5, 5, 5, 0, 0, 0, 5],
             [0, 0, 5, 0, 0, 0, 0, 0],
             [0, 5, 5, 5, 0, 0, 0, 0]],
            # Helikopter (w lewo, stan 1)
            [[0, 0, 4, 4, 4, 0, 0, 0],
             [4, 4, 4, 0, 0, 0, 0, 0],
             [0, 0, 4, 0, 0, 0, 0, 0],
             [0, 5, 5, 5, 0, 0, 0, 0],
             [5, 5, 5, 5, 5, 0, 0, 5],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [0, 5, 5, 5, 0, 0, 0, 5],
             [0, 0, 5, 0, 0, 0, 0, 0],
             [0, 5, 5, 5, 0, 0, 0, 0]],
            # Statek (w prawo)
            [[0, 0, 0, 0, 0, 4, 4, 4],
             [0, 0, 0, 4, 4, 4, 0, 0],
             [0, 0, 0, 0, 0, 4, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0],
             [5, 0, 0, 5, 5, 5, 5, 5],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [6, 6, 6, 6, 6, 6, 6, 6],
             [5, 0, 0, 0, 5, 5, 5, 0],
             [0, 0, 0, 0, 0, 5, 0, 0],
             [0, 0, 0, 0, 5, 5, 5, 0]],
            # Statek (w lewo)
            [[0, 0, 0, 0, 7, 7, 0, 0, 0],
             [0, 0, 0, 0, 7, 7, 0, 0, 0],
             [0, 0, 0, 0, 7, 7, 7, 0, 0],
             [0, 0, 0, 7, 7, 7, 7, 7, 0],
             [8, 8, 8, 8, 8, 8, 8, 8, 8],
             [0, 8, 8, 8, 8, 8, 8, 8, 8],
             [0, 0, 9, 9, 9, 9, 9, 9, 9],
             [0, 0, 9, 9, 9, 9, 9, 9, 0]],
            # Samolot (kierunek e)
            [[0, 0, 0, 0, 0, 0, 22],
             [0, 22, 22, 0, 0, 22, 22],
             [21, 21, 21, 21, 21, 21, 21],
             [21, 21, 21, 0, 0, 21, 0],
             [0, 0, 21, 21, 21, 0, 0],
             [0, 0, 0, 21, 21, 0, 0]],
            # Samolot (kierunek d)
            [[22, 0, 0, 0, 0, 0, 0],
             [22, 22, 0, 0, 22, 22, 0],
             [21, 21, 21, 21, 21, 21, 21],
             [0, 21, 0, 0, 21, 21, 21],
             [0, 0, 21, 21, 21, 0, 0],
             [0, 0, 21, 21, 0, 0, 0]],
            # Stacja paliw
            [[0, 12, 12, 12, 12, 12, 0],
             [12, 12, 0, 0, 0, 12, 12],
             [12, 12, 0, 12, 12, 12, 12],
             [12, 12, 0, 0, 12, 12, 12],
             [12, 12, 0, 12, 12, 12, 12],
             [12, 12, 0, 12, 12, 12, 12],
             [13, 13, 13, 13, 13, 13, 13],
             [13, 13, 0, 13, 0, 13, 13],
             [13, 13, 0, 13, 0, 13, 13],
             [13, 13, 0, 13, 0, 13, 13],
             [13, 13, 0, 0, 0, 13, 13],
             [13, 13, 13, 13, 13, 13, 13],
             [12, 12, 0, 0, 0, 12, 12],
             [12, 12, 0, 12, 12, 12, 12],
             [12, 12, 0, 0, 12, 12, 12],
             [12, 12, 0, 12, 12, 12, 12],
             [12, 12, 0, 0, 0, 12, 12],
             [12, 12, 12, 12, 12, 12, 12],
             [13, 13, 0, 13, 13, 13, 13],
             [13, 13, 0, 13, 13, 13, 13],
             [13, 13, 0, 13, 13, 13, 13],
             [13, 13, 0, 13, 13, 13, 13],
             [13, 13, 0, 0, 0, 13, 13],
             [13, 13, 13, 13, 13, 13, 13]],
            # Eksplozja (stan 1)
            [[0, 0, 0, 0, 0, 8, 0, 0],
             [0, 0, 0, 8, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 8, 0],
             [8, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 6, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 1, 0, 4],
             [0, 4, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 4, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 0, 4, 0],
             [9, 0, 0, 0, 1, 0, 0, 0],
             [0, 0, 9, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 9, 0, 0]],
            # Eksplozja (stan 2)
            [[0, 0, 15, 0, 0, 0],
             [0, 0, 0, 0, 15, 0],
             [15, 0, 0, 0, 0, 0],
             [0, 0, 0, 15, 0, 0],
             [0, 15, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 15],
             [0, 0, 9, 0, 0, 0],
             [0, 0, 0, 0, 9, 0]],
            # Dom
            [[0, 0, 7, 7, 7, 0, 0, 0],
             [0, 7, 7, 7, 7, 7, 0, 0],
             [7, 7, 7, 7, 7, 7, 7, 0],
             [13, 13, 13, 13, 13, 13, 13, 0],
             [13, 0, 13, 0, 13, 0, 13, 0],
             [13, 0, 13, 0, 13, 0, 13, 0],
             [13, 13, 13, 13, 13, 13, 13, 0],
             [0, 0, 0, 0, 0, 0, 0, 0],
             [0, 0, 0, 0, 0, 15, 0, 0],
             [0, 0, 0, 0, 0, 15, 0, 0],
             [0, 0, 0, 0, 15, 15, 15, 0],
             [0, 0, 0, 15, 15, 15, 15, 15],
             [0, 0, 0, 0, 15, 15, 15, 0],
             [0, 0, 0, 0, 0, 16, 0, 0],
             [0, 0, 0, 0, 0, 16, 0, 0]]
        ]

    def show(self):
        obj = self.ty
        # Sprawdzenie, czy obiekt jest w stanie eksplozji
        if self.t_expl > 20:
            obj = 12
        elif self.t_expl:
            obj = 13

        # Renderowanie obiektów
        for col in range(len(self.mp[obj][0])):
            for lin in range(len(self.mp[obj])):
                if self.mp[obj][lin][col] and (not self.out or self.t_expl):
                    x = self.x + col * int(self.w / len(self.mp[obj][0]))
                    y = self.y + lin * int(self.h / len(self.mp[obj]))
                    w = int(self.w / len(self.mp[obj][0]))
                    h = int(self.h / len(self.mp[obj]))
                    self.win.fill(self.cor[self.mp[obj][lin][col]], rect=[x, y, w, h])

        # Aktualizacja stanu eksplozji
        if self.t_expl:
            self.t_expl -= 1