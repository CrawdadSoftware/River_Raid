import cores


class Ilhas:
    def __init__(self, win, wdt, forma, y):
        self.y = y  # Pozycja w osi Y
        self.w = 21  # Szerokość elementu
        self.h = 10  # Wysokość elementu
        self.win = win  # Okno gry
        self.wdt = wdt  # Szerokość całego obszaru gry
        self.forma = forma  # Kształt wyspy
        self.cor = cores.cor  # Kolory do rysowania
        # Mapa różnych form wysp
        self.mp = [[0],  # Pusta forma
                   [1, 2, 2, 2, 2, 2, 2, 2, 2,    # Forma 1
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
                    2, 2, 2, 2, 2, 2, 2, 2, 2, 1],

                   [1, 2, 3, 3, 3, 3, 3, 3, 3,    # Forma 2
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                    3, 3, 3, 3, 3, 3, 3, 3, 2, 1],

                   [1, 2, 3, 4, 4, 4, 4, 4, 4,    # Forma 3
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 5, 5, 5, 5,   # Forma 4
                    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
                    5, 5, 5, 5, 5, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 6, 6, 6,   # Forma 5
                    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                    6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
                    6, 6, 6, 6, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 7, 7,   # Forma 6
                    7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                    7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                    7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                    7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                    7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
                    7, 7, 7, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 8,   # Forma 7
                    8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                    8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                    8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                    8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                    8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
                    8, 8, 8, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,   # Forma 8
                    9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                    9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                    9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                    9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                    9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
                    9, 9, 8, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,   # Forma 9
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                    10, 9, 8, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,   # Forma 10
                    10, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                    11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                    11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                    11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                    11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                    10, 9, 8, 7, 6, 5, 4, 3, 2, 1],                                       # 11

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,    # Forma 11
                    10, 11, 12, 12, 12, 12, 12, 12, 12, 12,
                    12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                    12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                    12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
                    12, 12, 12, 12, 12, 12, 12, 12, 12, 11,
                    10, 9, 8, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,   # Forma 12
                    10, 11, 12, 13, 13, 13, 13, 13, 13, 13,
                    13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                    13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                    13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                    13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
                    12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1],

                   [1, 2, 3, 4, 5, 6, 7, 8, 9,   # Forma 13
                    10, 11, 12, 13, 14, 14, 14, 14, 14,
                    14, 14, 14, 14, 14, 14, 14, 14, 14,
                    14, 14, 14, 14, 14, 14, 14, 14, 14,
                    14, 14, 14, 14, 14, 14, 14, 14, 14,
                    14, 14, 14, 14, 14, 14, 14, 14, 14,
                    14, 14, 14, 14, 14, 14, 13, 12, 11,
                    10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]

    def show(self):
        # Renderowanie wyspy na ekranie
        for py in range(len(self.mp[self.forma])):
            # Rysowanie lewej strony wyspy
            self.win.fill(self.cor[2], rect=[self.wdt / 2, self.y + py * self.h, self.mp[self.forma][py] * self.w, self.h])
            # Rysowanie prawej strony wyspy (odwróconej)
            invert = (self.wdt / 2) - self.w * self.mp[self.forma][py]
            self.win.fill(self.cor[2], rect=[invert, self.y + py * self.h, (self.wdt / 2) - invert, self.h])